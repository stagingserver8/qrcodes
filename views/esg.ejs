<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/tabler.min.css">
    <title>Benchmark</title>


    <!-- Include CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<!-- Include JS (Popper and Bootstrap) -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js"></script>


</head>
<body>
    <div class="main-content">
    <%- include('partials/sidebar') %> <!-- Updated include syntax -->
    <br>
    <br>
    <br>
    <div class="mb-3">
      <br>
      <label class="form-label">Reporting year</label>
      <div class="form-selectgroup">
        <label class="form-selectgroup-item">
          <input type="radio" name="name" value="HTML" class="form-selectgroup-input" checked />
          <span class="form-selectgroup-label">2022</span>
        </label>
        <label class="form-selectgroup-item">
          <input type="radio" name="name" value="CSS" class="form-selectgroup-input" />
          <span class="form-selectgroup-label">2023</span>
        </label>
        <label class="form-selectgroup-item">
          <input type="radio" name="name" value="PHP" class="form-selectgroup-input" />
          <span class="form-selectgroup-label">2024</span>
        </label>
     
      </div>
    </div>



<br>
<div class="mb-3">
  <label class="form-label">Item</label>
  <div class="form-selectgroup">
      <label class="form-selectgroup-item">
          <input type="radio" name="item" value="Governance" class="form-selectgroup-input" id="Governance" onchange="updateCardTitles(this.value); clearStandardSelection();" checked />
          <span class="form-selectgroup-label">Governance</span>
      </label>
      <label class="form-selectgroup-item">
          <input type="radio" name="item" value="Social" class="form-selectgroup-input" id="Employment" onchange="updateCardTitles(this.value); clearStandardSelection();" />
          <span class="form-selectgroup-label">Social</span>
      </label>
      <label class="form-selectgroup-item">
          <input type="radio" name="item" value="Environment" class="form-selectgroup-input" id="Environment" onchange="updateCardTitles(this.value); clearStandardSelection();" />
          <span class="form-selectgroup-label">Environment</span>
      </label>

      <label class="form-selectgroup-item">
        <input type="radio" name="item" value="Other" class="form-selectgroup-input" id="Other" onchange="updateCardTitles(this.value); clearStandardSelection();" />
        <span class="form-selectgroup-label">Other</span>
    </label>
  </div>
</div>

<!-- Add data attributes to your badges for the section and which type of data to load -->
<div id="governanceSubheadings" class="mb-3" style="display: none;">
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Governance', 'BoardOfDirectors')">Board of Directors</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Governance', 'AuditCommittee')">Audit Committee</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Governance', 'Management')">Management</span>
</div>


<div id="EnvSubheadings" class="mb-3" style="display: none;">
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Environment', 'Climate')">Climate</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Environment', 'Energy')">Energy</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Environment', 'Emissions')">Emissions</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Environment', 'Water')">Water</span>

</div>

<div id="socialSubheadings" class="mb-3" style="display: none;">
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Social', 'People')">People</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Social', 'Pay')">Pay</span>
  <span class="badge bg-blue-lt cursor-pointer" onclick="loadData('Social', 'Equality')">Equality</span>
</div>



<div class="mb-3">
  <label class="form-label">Standard</label>
  <div class="form-selectgroup">
      <label class="form-selectgroup-item">
          <input type="radio" name="esgStandard" value="GRI" class="form-selectgroup-input" id="GRI" onchange="updateSubOptions('GRI'); clearItemSelection();" />
          <span class="form-selectgroup-label">GRI</span>
      </label>
      <label class="form-selectgroup-item">
          <input type="radio" name="esgStandard" value="SASB" class="form-selectgroup-input" id="SASB" onchange="updateSubOptions('SASB'); clearItemSelection();" />
          <span class="form-selectgroup-label">SASB</span>
      </label>
      <label class="form-selectgroup-item">
          <input type="radio" name="esgStandard" value="ESRS" class="form-selectgroup-input" id="ESRS" onchange="updateSubOptions('ESRS'); clearItemSelection();" />
          <span class="form-selectgroup-label">ESRS</span>
      </label>
      <br>

      <br>
  </div>
  <br>
  <br>
  <div id="subOptionsContainer" class="mb-3"></div>
</div>
    <Br>
 
</div>

  </p>
  <div class="hr-text">Peer Comparison</div>
  <p>
    

  <br>

<!-- Cards with tabs component -->
<div class="card-tabs">
  <!-- Cards navigation -->
  <ul class="nav nav-tabs">
    <li class="nav-item"><a href="#tab-top-1" class="nav-link active" data-bs-toggle="tab" data-index="0">Asseco</a></li>
    <li class="nav-item"><a href="#tab-top-2" class="nav-link" data-bs-toggle="tab" data-index="1">Comarch</a></li>
    <li class="nav-item"><a href="#tab-top-3" class="nav-link" data-bs-toggle="tab" data-index="2">Software AG</a></li>
    
   
  </ul>
  <div class="tab-content">
    <div id="tab-top-1" class="card tab-pane active show">
      <div class="card-body">
          <div class="card-title"></div>
          <p class="text-secondary"></p>
      </div>
  </div>

    <div id="tab-top-2" class="card tab-pane">
        <div class="card-body">
            <div class="card-title"></div>
            <p class="text-secondary"></p>
        </div>
    </div>
    <div id="tab-top-3" class="card tab-pane">
        <div class="card-body">
            <div class="card-title"></div>
            <p class="text-secondary"></p>
        </div>
    </div>
</div>
</div>
<div class="hr-text">Analytics</div>
<div id="boardMembersChart"></div> <!-- Container for the ApexCharts chart -->


        </p>
      </div>
    </div>
  </div>
</div>

</p>



</body>

</html>




 <script>

function loadData(section, subSection) {
    fetch('reports.json')
    .then(response => response.json())
    .then(data => {
        // Loop through each tab and update the content
        data.reports.forEach((company, index) => {
            const sectionData = company.sections[section][subSection];
            const description = sectionData.description;

            let content = `<strong>Description:</strong> ${description}<br>`;

            // Check if Members exists and if it's an array with length
            if (sectionData.Members && sectionData.Members.length > 0) {
                content += `<strong>Total Members:</strong> ${sectionData.TotalMembers || 'N/A'}<br>
                            <strong>Total Men:</strong> ${sectionData.TotalMen || 'N/A'}<br>
                            <strong>Total Women:</strong> ${sectionData.TotalWomen || 'N/A'}<br><br>
                            <strong>Members:</strong><ul>`;
                sectionData.Members.forEach(member => {
                    content += `<li>${member.name} - ${member.title}</li>`;
                });
                content += "</ul>";
            }

            // Set the content for the specific tab
            const tabPane = document.getElementById(`tab-top-${index + 1}`);
            tabPane.querySelector('.card-title').textContent = subSection.replace(/([A-Z])/g, ' $1').trim();
            tabPane.querySelector('.text-secondary').innerHTML = content;
        });
    })
    .catch(error => {
        console.error('Error loading data:', error);
        // Display error in all tabs in case of failure
        data.reports.forEach((_, index) => {
            const tabPane = document.getElementById(`tab-top-${index + 1}`);
            tabPane.querySelector('.card-title').textContent = 'Error';
            tabPane.querySelector('.text-secondary').textContent = 'Failed to load data.';
        });
    });
}



function loadBoardMembersChart() {
    fetch('reports.json')
    .then(response => response.json())
    .then(data => {
        const totalMembers = data.BoardOfDirectors.TotalMembers;
        
        var options = {
            series: [{
                name: 'Board Members',
                data: [[1, totalMembers]]
            }],
            chart: {
                height: 350,
                type: 'scatter',
                zoom: {
                    enabled: true,
                    type: 'xy'
                }
            },
            title: {
                text: 'Nr of Board Members',
                align: 'center',
                style: {
                    fontSize: '20px',
                    color: '#333'
                }
            },
            xaxis: {
                tickAmount: 1,
                labels: {
                    formatter: function(val) {
                        return val.toFixed(0);
                    }
                }
            },
            yaxis: {
                tickAmount: 1
            },
            markers: {
                size: 10
            },
            tooltip: {
                x: {
                    show: false
                },
                y: {
                    title: {
                        formatter: (seriesName) => 'Total Members:'
                    }
                }
            }
        };

        var chart = new ApexCharts(document.querySelector("#boardMembersChart"), options);
        chart.render();
    })
    .catch(error => console.error('Error loading the board members data:', error));
}

window.onload = function() {
    updateCardTitles(document.querySelector('input[name="item"]:checked').value);
    loadBoardMembersChart(); // Load the chart when the page loads
}


function loadBoardOfDirectorsData() {
    const activeTab = document.querySelector('.nav-link.active');
    const activeTabIndex = activeTab.getAttribute('data-index'); // Get the index

    fetch('reports.json')
    .then(response => response.json())
    .then(data => {
        const boardData = data.reports[activeTabIndex].sections.Governance.BoardOfDirectors;
        const description = boardData.description;
        let content = `<strong>Description:</strong> ${description}<br><br>
                       <strong>Total Members:</strong> ${boardData.TotalMembers}<br>
                       <strong>Total Men:</strong> ${boardData.TotalMen}<br>
                       <strong>Total Women:</strong> ${boardData.TotalWomen}<br><br>
                       <strong>Members:</strong><ul>`;
        boardData.Members.forEach(member => {
            content += `<li>${member.name} - ${member.title}</li>`;
        });
        content += "</ul>";
        const tabContent = document.querySelector('#tab-top-' + (parseInt(activeTabIndex) + 1) + ' .text-secondary');
        document.querySelector('#tab-top-' + (parseInt(activeTabIndex) + 1) + ' .card-title').textContent = "Board of Directors";
        tabContent.innerHTML = content;
    })
    .catch(error => {
        console.error('Error loading the board data:', error);
        document.querySelector('#tab-top-' + (parseInt(activeTabIndex) + 1) + ' .card-title').textContent = 'Error';
        document.querySelector('#tab-top-' + (parseInt(activeTabIndex) + 1) + ' .text-secondary').textContent = 'Failed to load data.';
    });
}


    function updateSubOptions(selectedStandard) {
  const container = document.getElementById('subOptionsContainer');
  container.innerHTML = '';
  const subOptions = {
      'SASB': ['SASB-1', 'SASB-2', 'SASB-3'],
      'GRI': ['GRI-1', 'GRI-2', 'GRI-3'],
      'ESRS': ['ESRS-1', 'ESRS-2', 'ESRS-3']
  }[selectedStandard] || [];

  subOptions.forEach(option => {
      const badge = document.createElement('span');
      badge.className = 'badge bg-blue-lt me-2 cursor-pointer';
      badge.textContent = option;
      badge.onclick = function() { alert(option + ' clicked'); };
      container.appendChild(badge);
  });
}

function clearStandardSelection() {
  document.querySelectorAll('input[name="esgStandard"]').forEach(input => input.checked = false);
  document.getElementById('subOptionsContainer').innerHTML = '';
}

function clearItemSelection() {
  document.querySelectorAll('input[name="item"]').forEach(input => input.checked = false);
}

function updateCardTitles(selectedItem) {
    const governanceSubheadings = document.getElementById('governanceSubheadings');
    const envSubheadings = document.getElementById('EnvSubheadings');
    const socialSubheadings = document.getElementById('socialSubheadings'); // Ensure this ID matches your HTML

    // Hide all subheadings initially
    governanceSubheadings.style.display = 'none';
    envSubheadings.style.display = 'none';
    socialSubheadings.style.display = 'none';

    // Display the appropriate subheadings based on the selected item
    if (selectedItem === 'Governance') {
        governanceSubheadings.style.display = 'block';
        document.getElementById('boardOfDirectorsBadge').click(); // Auto-load first subheading data
    } else if (selectedItem === 'Environment') {
        envSubheadings.style.display = 'block';
        document.getElementById('diversityBadge').click(); // Assuming 'diversityBadge' is the first badge under Environment
    } else if (selectedItem === 'Social') {
        socialSubheadings.style.display = 'block';
        document.getElementById('peopleBadge').click(); // Assuming 'peopleBadge' is the first badge under Social
    }
}



function highlightSubheading(subheadingId) {
    document.querySelectorAll('#governanceSubheadings .badge').forEach(badge => {
        badge.classList.remove('bg-blue');
        badge.classList.add('bg-blue');
    });

    const selectedBadge = document.getElementById(subheadingId);
    selectedBadge.classList.add('bg-blue'); // Highlight the selected badge
    selectedBadge.classList.remove('bg-blue');
}

window.onload = function() {
    updateCardTitles(document.querySelector('input[name="item"]:checked').value);
    loadBoardMembersChart(); // Load the chart when the page loads
    loadBoardOfDirectorsData(); // Also load Board of Directors data if needed
}




</script>
